---
import { getCollection } from "astro:content";
import { siteConfig } from "../config/siteConfig";

import Main from "../layouts/Main.astro";
import Title from "../components/shared/Title.astro";
import TypedBlogPost from "src/components/blog/TypedBlogPost.astro";
// import BlogPost from "../components/blog/BlogPost.astro";

// const posts = await Astro.glob("./posts-old/*.{md,mdx}");
// esta es la forma en la cual puede astro buscar los blogs que tienes en la carpeta de forma automática (FORMA ANTIGUA) -> https://docs.astro.build/en/reference/api-reference/

//Gracias a esta función (isDraft: z.boolean().default(false),) del config.ts del content puedes hacer el filter dependiendo de si es o no draft
const blogPost = await getCollection(
  "blog",
  (post) => post.data.isDraft === false
);
/**
 * Con esto de arriba👆🏽 recoges todo lo que haya dentro de la carpeta content/blog y es 'blog' porque así le has puesto
 * a esa collection, si fuera newsletter, seria const blogPost = await getCollection("nresletter"); y astro lo detectaría como tal
 */
---

<Main title="mrjark">
  <Title>{siteConfig.title}</Title>
  <!-- <a href="/posts/post-01" class="underline text-yellow-500">Go Posts</a> -->
  <!-- component -->
  <article class="">
    <section class="container py-2 mx-auto">
      <div class="flex gap-6">
        <a class="text-teal-400 underline" href="/blog/1">Pagination Blog</a>
        <a class="text-teal-400 underline" href="/authors">Authors</a>
      </div>
      <section class="grid grid-cols-1 gap-8 mt-8 md:mt-16 md:grid-cols-2">
        <!-- {posts.map((post) => <BlogPost {...post} />)} -->
        {blogPost.map((post) => <TypedBlogPost post={post} />)}
      </section>
    </section>
  </article>
</Main>
